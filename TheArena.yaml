
  
# Resuable Event Prototypes        
eventPrototype:
  CheckinButton:
    name: "${ship} Checkin Button"
    # Have an expression syntax?
    conditions:
      - ${ship}_Checkin_Button == 1.0
      - "${ship}_here != 1.0"

    variable:
      "${ship}_here": 2.0
      "${ship}_Checkin_Button": 2.0

    commsButton:
      - text: ${ship} Press to Join Game
      - sideValue: ${sideValue}

    timer:
      - ${ship}_Checkin_Button: 10

  CheckinButtonRefresh:
    name: ${ship} Checkin Button Refresh
    conditions:
      - ${ship}_Checkin_Button == 2.0
      - if_timer_finished: ${ship}_Checkin_Button

    variable:
      ${ship}_Checkin_Button: 1.0

    commsButton:
      - text: "${ship} Press to Join Game"
        clear: true


  PressPlay:
    name: ${ship} Press Play
    conditions:
      - if_comms_button: ${ship} Press to Join Game

    variable:
      Artemis_here: 1
      Number_of_Players: Number_of_Players+1
    
    commsButton:   
      - text: ${ship} Press to Join Game
        clear: true
    incoming_comms_text:
      - from: CyberSecurity Suite IV
        sideValue: ${sideValue}
        type: FRIEND
        text: >
          Your anti-virus definitions are out of date. 
          Attempting to update.... Update Failed! 
          Could not connect to remote VAX server due to local sector interference. 
          Without updated virus definition we will be susceptible to cyber-attacks.
          Emergency manual protocols enacted. 
          I can warn of impending cyber-attack but you will have to manually remove them. 
          Choosing which safeguard program to run from the comms console.
      - from: Armory
        sideValue: ${sideValue}
        type: FRIEND
        text: >
          We just got our hands on some new ordinance in the last raid called TAGS. 
          Normally used for scientific research of local wildlife, but I can use their 
          data uplink capability to hack into an enemy ship and deploy a virus. 
          Fired the TAG like a torpedo, and once attached to a ship, choose a hacking
           program from the comms console. Be wary though I am sure others have figured 
           this out and will try the same thing against us.
      - from: Tractor Control
        sideValue: ${sideValue}
        type: FRIEND
        text: >
          We have equipped our ship with a Tractor for towing the eggs back since they are
           too big for our Cargo Hold. Eggs can only be towed at Impulse though if you jump we will
          lose control of the egg.
      - from: Hanger Bay
        sideValue: ${sideValue}
        type: FRIEND
        text: >
          It's as dense as whale soup out there.
          Luckily, I have converted one of our shuttles to a Drone.
           You can launch it with the button on your comms console. 
           With all the life-support and radiation shielding removed 
           this drone can travel faster than normal shuttles. 
           Use it to help survey and scout the area.
      - from: The Arena
        sideValue: ${sideValue}
        type: FRIEND
        text: >
          Welcome to the Arena. Collect the most Eggs to win! 
          Eggs must be towed to your station to score. 
          If you die you will respawn in |Respawn_Player_Time| seconds.
           If your station explodes it will respawn in |Respawn_Station_Time| seconds. 
           You have |Game_Timer| minutes. Good luck! 


  ResetWithPlayerCheckedIn:
    name: ${ship} Reset with Players Checked in
    conditions: 
      - if_timer_finished: "Player_Check"
      - Player_Check == 1.0
      - ${ship}_here == 1.0
      - if_exists: ${ship}

    destory:
      - ${ship}
      - ${ship} Station

  TowEgg:
    name: ${ship} Tow ${egg}
    conditions:
      - ${egg} == ${sideValue}
      - if_exists: ${ship}
    # note assumes egg has no space in the name for mesh, minor rewrite in not 
    relative_position:
      - name2: ${egg}
        distance: 100
        angle: 180
        name1: ${ship}

  ClaimEgg:
    name: ${ship} Claim ${egg}
    conditions:
      - ${egg} == ${sideValue}
      - if_docked: 
          player_name: ${Ship}
          name: ${ship}_Station
      - Scoring_Allowed == 1.0
    
    variables:
      ${ship}_Score: ${ship}_Score+1
      ${egg}: 1.0
      ${ship}_Cargo: 0.0
    
    destroy: 
      - ${egg}

    timer: 
      - ${egg}_Timer: 10
    
    incoming_comms_text:
      - from: ${ship} Station
        sideValue: ${sideValue}
        text: egg Secured. ${ship} has captured |${ship}_Score| Eggs

  CaptureEgg:
    name: ${ship} Capture ${egg}

    conditions:
      - if_distance: 
          name1: ${ship}
          name2: ${egg}
          comparator: "<= 100"
      - ${egg} == 2.0
      - ${ship}_Cargo == 0.0
      
    variables:
      ${egg}: ${sideValue} 
    
    incoming_comms_text:
      - from: Tractor Control
        sideValue: ${sideValue}
        text: ${ship} has control of ${egg}

  DropEgg:
    name: ${ship} Drop ${egg}
    conditions:
      - if_distance:
          name1: ${ship}
          name2: ${egg}
          comparator: ">= 1000.0"
      - ${egg} == ${sideValue}

    variables:
      ${egg}: 2.0
      ${ship}_Cargo: 0.0
    
    incoming_comms_text:
      - from: Tractor Control
        sideValue: ${sideValue}
        text: ${ship} lost control of ${egg}.

  SpawnEgg:
    name: Spawn ${egg}

    conditions:
      - ${egg} == 1.0
      - if_timer_finished: ${egg}_Timer
      - Number_of_Players > ${playerCount}
    
    variables:
      ${egg}: 2.0
    
    genericMesh: 
      x: ${x}
      y: ${y}
      z: ${z}
      name: ${egg}
      meshFileName: dat\mine.dxs
      textureFileName: dat\asteroidTexture.png
    
    properties:
      ${egg}: 
        pushRadius: 0.0

  
# These are blobs of values for use 
# to create multiple events

ranges:
  AllShips:
    - ship: Artemis
      sideValue: 10
    - ship: Intrepid
      sideValue: 11
    - ship: Aegis
      sideValue: 4
    - ship: Horatio
      sideValue: 5
    - ship: Excalibur
      sideValue: 6
    - ship: Hera
      sideValue: 7
    - ship: Ceres
      sideValue: 8
    - ship: Diana
      sideValue: 9

  Eggs:
    - egg: egg1
      playerCount: 0
      x: 50000
      y: 10
      z: 50000
    - egg: egg2
      playerCount: 3.0
      x: 49000
      y: 3
      z: 49000 
    - egg: egg3
      playerCount: 4.0
      x: 51000
      y: 3
      z: 51000 
    - egg: egg4
      playerCount: 6.0
      x: 49000
      y: 3
      z: 51000
    - egg: egg5
      playerCount: 7.0
      x: 51000
      y: 3
      z: 49000 


  Wreaks:
    - wreak: wreak${_index}
      _from: 1
      _to: 8

  Anomalies:
    - anomaly: anomaly${_index}
      _from: 1
      _to: 8

  # Nested Ranges??
  EggsAndShips:
    _outer: Eggs
    _inner: AllShips
    

events:
  # Create multiple events using the range
  - _prototype: CheckinButton
    _range: AllShips
    
  # Check in Button Refresh
  - _prototype: CheckinButtonRefresh
    _range: AllShips
  
  - _prototype: PressPlay
    _range: AllShips
  
  - _prototype: ResetWithPlayerCheckedIn
    _range: AllShips

  - _prototype: ClaimEgg
    _range: EggsAndShips

  - _prototype: TowEgg
    _range: EggsAndShips

  - _prototype: CaptureEgg
    _range: EggsAndShips

  - _prototype: DropEgg
    _range: EggsAndShips
    
  - _prototype: SpawnEgg
    _range: EggsAndShips

  - name: The Ancient One Destroyed
    conditions:
      - if_not_exists: The Ancient One
      - The_Ancient_One == 1.0

    timers:
      - The_Ancient_One: 300
    variables:
      The_Ancient_One: 2.0

  - name: The Ancient One Respawn
    conditions:
      - if_timer_finished: The_Ancient_One
      - The_Ancient_One == 2.0

    monsters:
      dragons:
        - name: The Ancient One
          age: 3
          x: 50000
          y: -10
          z: 50000

    variables:
      The_Ancient_One: 1.0
 
  